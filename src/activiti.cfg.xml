<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 
		ProcessEngineConfiguration configuration = ProcessEngineConfiguration.createStandaloneProcessEngineConfiguration();
		//数据库配置
		configuration.setJdbcDriver("com.mysql.jdbc.Driver");
		configuration.setJdbcUrl("jdbc:mysql://localhost:3306/itcast0621activiti?useUnicode=true&amp;characterEncoding=utf8");
		configuration.setJdbcUsername("root");
		configuration.setJdbcPassword("root");
		configuration.setDatabaseSchemaUpdate(ProcessEngineConfiguration.DB_SCHEMA_UPDATE_TRUE);
	 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<!-- 创建表的策略 -->
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="deploymentResources" value="classpath*:/com/hlic/base/bill/*.bpmn20.xml" />
	</bean>
	
    <!-- 创建流程引擎对象 -->
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
    
    <!-- 
                  相当于下面的代码
        RepositoryServicie repositoryService = processEngine.getRepositoryService();
        RuntimeServicie repositoryService = processEngine.getRuntimeServicie();
        TaskServicie taskServicie = processEngine.getTaskServicie();
        HistoryServicie historyServicie = processEngine.getHistoryServicie();
     -->
    <!-- 由流程引擎对象，提供的方法，创建项目中使用的Activiti工作流的Service -->
    <!-- 工作流仓储服务 -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<!-- 工作流运行服务 -->
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<!--  工作流任务服务-->
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	<!--  工作流历史数据服务-->
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<!--  工作流管理服务-->
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	<!-- 工作流唯一服务 -->
	<bean id="IdentityService" factory-bean="processEngine" factory-method="getIdentityService" />
</beans>